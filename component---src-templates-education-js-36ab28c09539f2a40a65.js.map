{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/templates/education.js","webpack:///./src/components/education-nav.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","props","pageData","data","educationJson","className","to","title","description","items","map","item","index","key","slug","name","degree","url","href","target","rel","score","query","allEducationJson","edges","element","node","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"+kBAAA,sGAcyBA,QAAOC,QAELC,IAAMC,cAAc,K,0ICZhC,mBAACC,GACZ,IAAMC,EAAWD,EAAME,KAAKC,cAC5B,OACI,6BACI,4BAAQC,UAAU,mDACd,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,qCAAvB,sBACA,wBAAIA,UAAU,iCAAiCH,EAASK,OACxD,uBAAGF,UAAU,WAAWH,EAASM,eAGzC,4BAEQN,EAASO,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACf,wBAAIP,UAAU,4BAA4BQ,IAAKD,GAC3C,uBAAGP,UAAU,iBAAiBH,EAASY,MACvC,yBAAKT,UAAU,gCACX,yBAAKA,UAAU,UACX,4BAAKM,EAAKI,MAENJ,EAAKK,QAAU,0BAAMX,UAAU,yDAAyDM,EAAKK,QAG7FL,EAAKM,KAAO,uBAAGC,KAAMP,EAAKM,IAAKZ,UAAU,wBAAwBc,OAAO,SAASC,IAAI,uBAAzE,YAGpB,yBAAKf,UAAU,gBACf,0BAAMA,UAAU,yDAAyDM,EAAKU,cAOlG,kBAAC,IAAD,QAML,IAAMC,EAAK,c,qFCzCH,aAACrB,GACZ,IAAME,EAAI,OAcV,OACI,yBAAKE,UAAU,yBACX,wBAAIA,UAAU,kCAAd,uCACA,yBAAKA,UAAU,4BAEPF,EAAKoB,iBAAiBC,MAAMd,KAAI,SAACe,EAASb,GAAW,IACzCc,EAASD,EAATC,KACR,OACI,6BAASrB,UAAU,2CACf,gCACI,uBAAGA,UAAU,2BAA2BqB,EAAKnB,OAC7C,yBAAKF,UAAU,QACX,uBAAGA,UAAU,cAAcqB,EAAKlB,aAChC,kBAAC,IAAD,CAAMF,GAAE,IAAMoB,EAAKZ,KAAQT,UAAU,yBAArC,gB,qBC/BxC,IAAsBsB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEnC,IAAMoC,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-templates-education-js-36ab28c09539f2a40a65.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Ednav from \"../components/education-nav\"\n\nexport default (props) => {\n    const pageData = props.data.educationJson;\n    return (\n        <div>\n            <header className=\"py-12 border-purple-500 border-solid border-t-8\">\n                <div className=\"max-w-4xl mx-auto\">\n                    <Link to=\"/\" className=\"uppercase underline text-pink-500\">Regresar al inicio</Link>\n                    <h2 className=\"capitalize text-6xl font-bold\">{pageData.title}</h2>\n                    <p className=\"text-xl\">{pageData.description}</p>\n                </div>\n            </header>\n            <ul>\n                {\n                    pageData.items.map((item, index) => (\n                        <li className=\"bg-white shadow mt-4 flex\" key={index}>\n                            <p className=\"vertical-text\">{pageData.slug}</p>\n                            <div className=\"flex items-center flex-1 p-8\">\n                                <div className=\"flex-1\">\n                                    <h3>{item.name}</h3>\n                                    {\n                                        item.degree && <span className=\"inline-block p-2 radius bg-purple-100 text-purple-700\">{item.degree}</span>\n                                    }\n                                    {\n                                        item.url && <a href={item.url} className=\"btn mt-4 inline-block\" target=\"_blank\" rel=\"noopener noreferrer\">Ver más</a>\n                                    }\n                                </div>\n                                <div className=\"inline-block\">\n                                <span className=\"inline-block p-2 text-2xl bg-green-100 text-green-700\">{item.score}</span>\n                                </div> \n                            </div>\n                        </li>\n                    ))\n                }\n            </ul>\n            <Ednav/>\n        </div>\n    );\n}\n\n\nexport const query = graphql`\n    query($slug : String){\n        educationJson(slug:{ eq: $slug }){\n            title\n            description\n            slug\n            items{\n                name\n                degree\n                score\n                url\n            }\n        }\n    }\n`;","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nexport default (props) => {\n    const data = useStaticQuery(graphql`\n        {\n            allEducationJson{\n                edges{\n                    node{\n                        slug\n                        title\n                        description\n                    }\n                }\n            }\n        }\n    `);\n\n    return (\n        <div className=\"maxw4xl mx-auto mt-20\">\n            <h2 className=\"text-3xl font-bold text-center\">Conoce sobre mi formación educativa</h2>\n            <nav className=\"flex justify-center mt-8\">\n                {\n                    data.allEducationJson.edges.map((element, index) => {\n                        const { node } = element;\n                        return (\n                            <article className=\"flex-1 bg-white shadow m-4 max-w-sm p-4\">\n                                <header>\n                                    <p className=\"font-bold leading-loose\">{node.title}</p>\n                                    <div className=\"mt-8\">\n                                        <p className=\"font-light\">{node.description}</p>\n                                        <Link to={`/${node.slug}`} className=\"btn inline-block mt-4\" >Ir</Link>\n                                    </div>\n                                </header>\n                            </article>\n                        )\n                    })\n                }\n            </nav>\n        </div>\n    );\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}